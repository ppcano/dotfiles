
"clipboard working with vim
set clipboard=unnamed

"https://github.com/carlhuda/janus/pull/195 https://github.com/carlhuda/janus/issues/23
"
"change ESC for jj for exit edit mode 
inoremap jj <ESC>

"New Vim users will want the following lines to teach them to do things righ
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk
"automatic saving
":au FocusLost * :wa
"
set autowriteall
"au FocusLost * silent! wa


nmap <leader><leader> :ZoomWin<CR>

"split views
" open new vertical split [leader + s]
nnoremap <Leader>s <C-w>v<C-w>l
" open new horizontal split [leader + i]
nnoremap <Leader>i <C-w>s<C-w>j
"easy navigation from tabs
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nmap <leader><leader> :ZoomWin<CR>

function! MarkWindowSwap()
    let g:markedWinNum = winnr()
endfunction

function! DoWindowSwap()
    "Mark destination
    let curNum = winnr()
    let curBuf = bufnr( "%" )
    exe g:markedWinNum . "wincmd w"
    "Switch to source and shuffle dest->source
    let markedBuf = bufnr( "%" )
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' curBuf
    "Switch to dest and shuffle source->dest
    exe curNum . "wincmd w"
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' markedBuf 
endfunction

nmap <silent> <leader>mw :call MarkWindowSwap()<CR>
nmap <silent> <leader>pw :call DoWindowSwap()<CR>

function! ToggleNerdTreeIgnore()
    if g:NERDTreeIgnore == []
      let g:NERDTreeIgnore=['tmp', 'node_modules', 'dist']
    else
      let g:NERDTreeIgnore=[]
    endif
    exec 'normal '.g:NERDTreeMapRefreshRoot
endfunction

nmap Z :call ToggleNerdTreeIgnore()<cr>

let g:NERDTreeIgnore=['tmp', 'node_modules', 'dist']

nmap <leader>B :Bookmark<CR>

let g:syntastic_mode_map = { 'mode': 'active',
    \ 'active_filetypes': [],
    \ 'passive_filetypes': ['html', 'handlebars', 'hbs'] }
"let g:syntastic_javascript_checkers = ['jshint']
let g:syntastic_javascript_checkers = ['jshint', 'jscs']
let g:syntastic_python_checkers=['pep8', 'python']
nmap <leader>st :SyntasticToggleMode<CR>

"nnoremap <C-=> <C-w>=http://vim.1045645.n5.nabble.com/unable-to-map-ctrl-1-td1186261.html
"
" zoomview
"nnoremap <C-o> <C-w>o

"nnoremap <leader>+ <C-w>+
"nnoremap <leader>- <C-w>-
"nnoremap <leader>> <C-w>>
"nnoremap <leader>< <C-w><
"
"nnoremap <Leader>= <C-w>=

"http://vim.wikia.com/wiki/Insert_newline_without_entering_insert_mode
map <CR> o<Esc>

" highlight javascript error with jslint

"let g:JSLintHighlightErrorLine = 1
au BufNewFile,BufRead *.less set filetype=less

" Set Python indentation options
au FileType python setl tabstop=4 shiftwidth=4 expandtab softtabstop=4
au FileType html setl tabstop=4 shiftwidth=4 expandtab softtabstop=4
au FileType rst setl tabstop=4 shiftwidth=4 expandtab softtabstop=4
au FileType djangohtml setl tabstop=4 shiftwidth=4 expandtab softtabstop=4


au FileType handlebars setl tabstop=2 shiftwidth=2 expandtab softtabstop=2

:set shiftwidth=2 tabstop=2 softtabstop=2 shiftwidth=2 expandtab 

"http://stackoverflow.com/questions/1098159/vim-stop-existing-swap-file-warnings
set shortmess+=A
" Autoindent all files.
set autoindent

"http://stackoverflow.com/questions/29819168/how-can-i-integrate-jscs-autofix-feature-into-vim
function! JscsFix()
    "Save current cursor position"
    let l:winview = winsaveview()
    "Pipe the current buffer (%) through the jscs -x command"
    % ! jscs -x
    "Restore cursor position - this is needed as piping the file"
    "through jscs jumps the cursor to the top"
    call winrestview(l:winview)
endfunction
command Jfix :call JscsFix()

"autocmd BufWritePre *.js Jfix

if has("gui_running")
    "set guioptions=-mTr
    set guioptions-=T         " Remove macvim toolbar
    set guioptions-=r         " Remove right scrollbar
    set guioptions-=L
    set fu
    set lines=100 columns=150
    color vividchalk
    "set guifont=Monaco:h10
    "set noantialias
  endif
